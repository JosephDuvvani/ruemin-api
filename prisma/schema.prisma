// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  username  String
  password  String
  firstname String
  lastname  String?
  profile   Profile?
  inbox     Chat[]
  memberOf  Community[] @relation("GroupMember")
  createrOf Community[] @relation("GroupCreater")
  requests  Request[]
  createdAt DateTime    @default(now())
}

model Profile {
  id       String @id @default(uuid())
  imageUrl String
  bio      Json
  user     User   @relation(fields: [userId], references: [id])
  userId   String @unique
}

model Token {
  id  String @id @default(uuid())
  jwt String
}

model Chat {
  id        String    @id @default(uuid())
  messages  Json
  users     User[]
  createdAt DateTime  @default(now())
  Request   Request[]
}

model Community {
  id        String   @id @default(uuid())
  messages  Json
  members   User[]   @relation("GroupMember")
  creater   User     @relation("GroupCreater", fields: [createrId], references: [id])
  createrId String
  createdAt DateTime @default(now())
}

model Request {
  id          String @id @default(uuid())
  sender      User   @relation(fields: [senderId], references: [id])
  senderId    String
  community   Chat?  @relation(fields: [communityId], references: [id])
  communityId String
}
